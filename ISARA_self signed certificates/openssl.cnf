# OpenSSL root CA configuration file.

[ ca ]
# `man ca`
default_ca = ISARA CA

[ISARA CA]
private_key       = "D:\\Programs\\openssl-1.0.2u-x64_86-win64\\ca.key"
certificate       = "D:\\Programs\\openssl-1.0.2u-x64_86-win64\\ca.pem"
new_certs_dir     = "D:\\Programs\\openssl-1.0.2u-x64_86-win64\\newcrt"
database          = "D:\\Programs\\openssl-1.0.2u-x64_86-win64\\index.txt"
serial            = "D:\\Programs\\openssl-1.0.2u-x64_86-win64\\serial"
RANDFILE          = "D:\\Programs\\openssl-1.0.2u-x64_86-win64\\.rand"

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_strict

[ CA_default ]
# Directory and file locations.
dir               = D:\Programs\openssl-1.0.2u-x64_86-win64\ca
certs             = D:\Programs\openssl-1.0.2u-x64_86-win64\crt
crl_dir           = D:\Programs\openssl-1.0.2u-x64_86-win64\crl
new_certs_dir     = D:\Programs\openssl-1.0.2u-x64_86-win64\newcrt
database          = D:\Programs\openssl-1.0.2u-x64_86-win64\index.txt
serial            = D:\Programs\openssl-1.0.2u-x64_86-win64\serial
RANDFILE          = D:\Programs\openssl-1.0.2u-x64_86-win64\.rand

# The root key and root certificate.
private_key       = D:\Programs\openssl-1.0.2u-x64_86-win64\ca.key
certificate       = D:\Programs\openssl-1.0.2u-x64_86-win64\ca.pem

# For certificate revocation lists.
crlnumber         = D:\Programs\openssl-1.0.2u-x64_86-win64\crlnumber
crl               = D:\Programs\openssl-1.0.2u-x64_86-win64\ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_strict

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the `req` tool (`man req`).
default_bits        = 4096
distinguished_name  = req_distinguished_name
string_mask         = utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md          = sha256

# Extension to add when the -x509 option is used.
x509_extensions     = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = CA
stateOrProvinceName             = Ontario
localityName                    = Etobicoke
0.organizationName              = ISARA Testing Inc.
organizationalUnitName          = Validation
commonName                      = Testing
emailAddress                    = validation@isaratesting.org

# Optionally, specify some defaults.
countryName_default             = CA
stateOrProvinceName_default     = ON
localityName_default            = Etobicoke
0.organizationName_default      = ISARA Testing Inc.
organizationalUnitName_default  = Validation
emailAddress_default            = validation@isaratesting.org

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:TRUE
nsCertType = client, email
nsComment = "ISARA TESTING CA Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:TRUE
nsCertType = server
nsComment = "RealCrypto CA Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:TRUE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
